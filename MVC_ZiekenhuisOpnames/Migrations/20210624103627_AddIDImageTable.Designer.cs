// <auto-generated />
using System;
using MVC_ZiekenhuisOpnames.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVC_ZiekenhuisOpnames.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210624103627_AddIDImageTable")]
    partial class AddIDImageTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVC_ZiekenhuisOpnames.Models.IDImage", b =>
                {
                    b.Property<int>("IDImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("IDImageId");

                    b.ToTable("IDImages");
                });

            modelBuilder.Entity("MVC_ZiekenhuisOpnames.Models.Patient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Bus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Geslacht")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("HuisNr")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("ImgAchterkantId")
                        .HasColumnType("int");

                    b.Property<int>("ImgVoorkantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Leeftijd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("pathImgIdCardAchterkant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pathImgIdCardVoorkant")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ImgAchterkantId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("MVC_ZiekenhuisOpnames.Models.Patient", b =>
                {
                    b.HasOne("MVC_ZiekenhuisOpnames.Models.IDImage", "IDImage")
                        .WithMany()
                        .HasForeignKey("ImgAchterkantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDImage");
                });
#pragma warning restore 612, 618
        }
    }
}
